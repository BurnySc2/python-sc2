[tool.poetry]
name = "burnysc2"
version = "5.0.12"
description = "A StarCraft II API Client for Python 3"
authors = ["BurnySc2 <gamingburny@gmail.com>"]
license = "MIT"
homepage = "https://github.com/Burnysc2/python-sc2"
documentation = "https://burnysc2.github.io/python-sc2/docs/index.html"
keywords = ["StarCraft", "StarCraft 2", "StarCraft II", "AI", "Bot"]
classifiers=[
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Education",
    "Intended Audience :: Science/Research",
    "Topic :: Games/Entertainment",
    "Topic :: Games/Entertainment :: Real Time Strategy",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Operating System :: POSIX :: Linux",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: MacOS :: MacOS X",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
]
packages = [
    { include = "sc2/*.py" },
]

[tool.poetry.dependencies]
python = ">=3.7, <3.10"
s2clientprotocol = "^5.0.7"
numpy = "<=1.19.3"
scipy = "^1.7.1"
aiohttp = "^3.7.4"
loguru = "^0.5.3"
portpicker = "^1.4.0"
pyglet = "^1.5.21"
mpyq = "^0.2.5"
typing-extensions = "^3.10.0"
win32-setctime = "^1.0.3"
importlib-metadata = "<=2.1.0"

[tool.poetry.dev-dependencies]
atomicwrites = "^1.4.0"
pytest = "^6.2.5"
pytest-asyncio = "^0.15.1"
pytest-benchmark = "^3.4.1"
pytest-cov = "^3.0.0"
coverage = "^6.0"
codecov = "^2.1.12"
hypothesis = "^6.23.1"
Sphinx = "^4.2.0"
sphinx-autodoc-typehints = "^1.12.0"
Pillow = "^9.0.0"
matplotlib = "^3.4.3"
radon = "^5.1.0"
pre-commit = "^2.15.0"
yapf = "^0.31.0"
mypy = "^0.910"
pylint = "^2.11.1"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
python_version = "3.7"
ignore_missing_imports = true

[tool.pycln]
all = true

[tool.isort]
line_length = 120
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.pylint.design]
# Maximum number of locals for function / method body
max-locals = 25
[tool.pylint.messages_control]
max-line-length = 120
# C0301,E501 2x Line too long
# C0114 module Docstring
# C0115 missing class docstring
# C0116 missing function docstring
# R0913 function with too many arguments
# C0413 import order
# C0411 import order of external libs
# W0511 TODO
# W0105 string statement with no effect
# R0801 duplicate code
# W0621 redefining name from outer score
# C0103 variable name does not conform snake case naming style
# R0903: Too few public methods of a class
# E1101: Class 'SqlMetaclass' has no '__annotations__' member (no-member)
disable = "C0301,E501, C0114, C0115, C0116, R0913, C0413, C0411, W0511, W0105, R0801, W0621, C0103, R0903, E1101"

[tool.yapf]
based_on_style = "pep8"
column_limit = 120
split_arguments_when_comma_terminated = true
dedent_closing_brackets = true
