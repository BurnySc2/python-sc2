name: Python

# Help: https://help.github.com/en/actions/automating-your-workflow-with-github-actions/workflow-syntax-for-github-actions

on: [push, pull_request]

jobs:
  run_pytest_tests:
    name: Run pytest on pickle files
    runs-on: ubuntu-latest
    timeout-minutes: 3
    strategy:
      matrix:
        python-version: [3.7, 3.8]

    steps:
      - uses: actions/checkout@v1

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          # python -m pip install --upgrade pip pipenv
          python -m pip install pipenv
          pipenv install --dev --python ${{ matrix.python-version }}

      - name: Run pipenv pytest tests on pickle files
        run: |
          pipenv run pytest test/


#  run_autotest_bot:
#    name: Run various tester bots on linux
#    runs-on: ubuntu-latest
#    timeout-minutes: 15
#    strategy:
#      # Do not allow this test to cancel. Finish all jobs regardless of error
#      fail-fast: false
#    steps:
#    # Copy data from repository
#    - uses: actions/checkout@v1
#
#    - name: Print directories and files
#      run: |
#        # Print directory
#        sudo apt-get install tree
#        tree
#
#    - name: Load and build docker image
#      run: |
#        # Build docker image from Dockerfile
#        docker build -t test_image -f test/Dockerfile_3.7 .
#
#    - name: Run autotest_bot.py
#      run: |
#        docker run -it -d --name app1 test_image
#        docker exec -i app1 bash -c "python test/travis_test_script.py test/autotest_bot.py"
#        docker rm -f app1
#
#    - name: Run upgradestest_bot.py
#      run: |
#        docker run -it -d --name app2 test_image
#        docker exec -i app2 bash -c "python test/travis_test_script.py test/upgradestest_bot.py"
#        docker rm -f app2
#
#    - name: Run damagetest_bot.py
#      run: |
#        docker run -it -d --name app3 test_image
#        docker exec -i app3 bash -c "python test/travis_test_script.py test/damagetest_bot.py"
#        docker rm -f app3


# # Upload example file
#  artifact_upload_test:
#    name: Upload world.txt
#    runs-on: ubuntu-latest
#    steps:
#    - uses: actions/checkout@v1
#
#    - run: mkdir -p path/to/artifact
#
#    - run: echo hello > path/to/artifact/world.txt
#
#    - uses: actions/upload-artifact@v1
#      with:
#        name: my-artifact
#        path: path/to/artifact

  # https://github.com/JamesIves/github-pages-deploy-action
  release_to_github_pages:
    name: GitHub Pages
    runs-on: ubuntu-latest
    # Required job to succeed before this job is run
    needs: [run_pytest_tests] # [run_pytest_tests, run_autotest_bot]
    steps:
      - uses: actions/checkout@v1

      - run: echo ${{github.ref}}

      - name: Publish to Github Pages
        if: github.ref == 'develop' || github.ref == 'convert-to-github-actions'
        uses: JamesIves/github-pages-deploy-action@releases/v3
        with:
          ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
          BASE_BRANCH: develop # The branch the action should deploy from.
          BRANCH: gh-pages # The branch the action should deploy to.
          FOLDER: . # The folder the action should deploy.

